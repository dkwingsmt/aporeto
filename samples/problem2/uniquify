#!/usr/bin/env python
# -*- coding: utf-8 -*-

import sys

USAGE = '''uniquify [--help|-h]
uniquify --file=<filename> --output=<output-filename> [â€”verbose]'''

# Read a file and return its unique lines   
def processFile(filename):
    result = []         # Store result with order preserved
    record = set()      # Detect duplication
    with open(filename) as infile:
        if not infile:
            return []
        for line in infile:
            line = line.strip()
            if not line in record:
                result.append(line)
                record.add(line)
    return result

# Write a set of lines (result) to a file
def outputResult(result, filename):
    with open(filename,'w') as outfile:
        for line in result:
            outfile.write(line+'\n')

def main():
    infile = None
    outfile = None
    verbose = False
    for i, arg in enumerate(sys.argv):
        if i == 0:
            continue
        detail = None
        if '=' in arg:
            [arg, detail] = arg.split('=')
        if arg in ['-h', '--help']:
            print USAGE
            sys.exit(0)
        elif arg == '--file':
            infile = detail
        elif arg == '--output':
            outfile = detail
        elif arg == '--verbose':
            verbose = True
        else:
            print USAGE
            sys.exit(1)
    # Filename must not be empty
    if not infile or not outfile:
        print USAGE
        sys.exit(1)

    # The real work
    outputResult(processFile(infile), outfile)
    
    
if __name__ == '__main__':
    main()
